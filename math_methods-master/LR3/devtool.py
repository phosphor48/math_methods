import numpy as np
from sympy import *


def get_eigenvalues(coefs):
    n = len(coefs)
    x = Symbol('x')
    answer = x ** n
    for i in range(n):
        answer -= coefs[n - 1 - i] * x ** i
    return solve((-1) ** n * (answer), x)


matrix_vlad = np.array([
    [-8.4958586416, -0.8625069023, 26.340695748, -48.102705687, -56.34180011],
    [19.381557151, -14.532302595,	-10.543898399, -0.6626173385, 31.375483158],
    [-7.5306460519,	3.5825510768,	0.2788514633,	4.3600220872,	-7.0706791828],
    [-20.120927664,	7.7852015461,	16.451684152,	-21.200993926,	-49.819436775],
    [9.6112644948,	-4.1060187742,	-22.913307565,	30.44064053,	43.9503037]
])

matrix_10v = np.array([
    [0.3690808083,	1.4360310128,	-0.7286685253,	0.9902627134,	-1.0665330376],
    [9.3218900714,	-1.5135833622,	-3.530025844,	-5.5186097149,	1.7354347693],
    [0.5327933904,	-2.2644227834,	-4.0178364299,	-5.5956024501,	-3.5168698236],
    [1.6248550091,	1.6243462689,	-2.4389918805,	2.4385238396,	2.7413870292],
    [-7.857573106,	-1.1999348813,	-0.8239759061,	0.3890030728,	-6.2761848558],
])
matrix_20v = np.array([
    [-1.0630118065,	-1.4750112364,	5.5355236185,	-1.9493318424,	-7.427566021],
    [-1.8639786891,	-6.077602745,	-1.7837120838,	-0.5074270179,	3.0586707008],
    [2.1765054099,	-3.2684140713,	-2.4919042764,	4.8876464849,	0.9716841517],
    [2.7411122439,	-2.6530733055,	3.0332160358,	1.1998224093,	-1.4811063242],
    [0.0031571678,	-0.1139869109,	0.5117900483,	0.9243924096,	-4.5673035814],

])
matrix_ulia = np.array([
    [-1.0630118065,	-1.4750112364,	5.5355236185,	-1.9493318424,	-7.427566021],
    [-1.8639786891,	-6.077602745,	-1.7837120838,	-0.5074270179,	3.0586707008],
    [2.1765054099,	-3.2684140713,	-2.4919042764,	4.8876464849,	0.9716841517],
    [2.7411122439,	-2.6530733055,	3.0332160358,	1.1998224093,	-1.4811063242],
    [0.0031571678,	-0.1139869109,	0.5117900483,	0.9243924096,	-4.5673035814]
])